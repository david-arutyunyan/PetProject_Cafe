package game;

import cafe.Cafe;
import cafe.Menu;
import cafe.Order;
import staff.Employee;

import java.util.ArrayList;
import java.util.List;

public class Game {
    public static void main(String[] args) {
        Cafe cafe = prestart();
        // Запускается игра
        // С какой-то периодичностью приходят челики (от 1 до 4 рандом). Они считаются за одну группу
            // Если есть свободные столы в кафе, то они проходят к ним и садятся
            // Если нет свободных столов, то они стоят и ждут, пока места освободятся. Запускается отсчет терепения
                // Если терпение закончилось, то челы уходят (-реп кафе)
                // Если свободное место появляется, пока не кончилось терпение, то они проходят и садятся
        // На столах уже лежат меню. Челы начинают выбирать блюда из меню какое-то время
        // Челы зовут официанта и ждут, пока тот подойдет
            // Если есть свободный официант, то он тут же подходит к ним
            // Если свободного официанта нет, то они ждут. Запускается отсчет терепения
                // Если терпение закончилось, то челы уходят (-реп кафе)
                // Если официант освободился, пока не кончилось терпение, то он проходит к челам
        // Челы делают заказ, что занимает какое-то время
        // Заказ мгновенно передается на кухню (в очередь заказов)
        // Заказ сидит и ждет, пока придет его очередь готовиться. Шеф-повары готовят заказы по мере поступления.
        // Каждое блюдо требует денежных затрат на ингредиенты, а также на время его приготовления
        // Чем круче повар (опыт создания блюд и скилл), тем быстрее он создаст блюдо
        // Когда блюдо приготовилось оно мгновенно передается на стол (даже если официанты заняты)
        // Челы какое-то время хавают
        // Челы  платят за еду + оставляют чаевые, опираясь на настроение и фин. возможности, затем моментально уходят и освобождают столик

        // Официант считается свободным, если он не принимает заказ
        // Шеф-повар может взять заказ на изготовку, если он не готовит ничего в данный момент
    }

    private static Cafe prestart() {
        int initialTablesNumber = 4;
        int initialFinancialResult = 0;

        return new Cafe(initialTablesNumber,
                initialFinancialResult,
                new ArrayList<Employee>(),
                new ArrayList<Order>(),
                new Menu());
    }
}